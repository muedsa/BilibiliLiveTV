// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: danmaku.proto

package com.muedsa.bilibililiveapiclient.model.danmaku;

/**
 * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig}
 */
public final class DanmuWebPlayerConfig extends
        com.google.protobuf.GeneratedMessageLite<
                DanmuWebPlayerConfig, DanmuWebPlayerConfig.Builder> implements
        // @@protoc_insertion_point(message_implements:com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig)
        DanmuWebPlayerConfigOrBuilder {
    private DanmuWebPlayerConfig() {
        fontFamily_ = "";
        drawType_ = "";
    }

    private int bitField0_;
    public static final int DMSWITCH_FIELD_NUMBER = 1;
    private boolean dmSwitch_;

    /**
     * <code>optional bool dmSwitch = 1;</code>
     *
     * @return Whether the dmSwitch field is set.
     */
    @Override
    public boolean hasDmSwitch() {
        return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>optional bool dmSwitch = 1;</code>
     *
     * @return The dmSwitch.
     */
    @Override
    public boolean getDmSwitch() {
        return dmSwitch_;
    }

    /**
     * <code>optional bool dmSwitch = 1;</code>
     *
     * @param value The dmSwitch to set.
     */
    private void setDmSwitch(boolean value) {
        bitField0_ |= 0x00000001;
        dmSwitch_ = value;
    }

    /**
     * <code>optional bool dmSwitch = 1;</code>
     */
    private void clearDmSwitch() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dmSwitch_ = false;
    }

    public static final int AISWITCH_FIELD_NUMBER = 2;
    private boolean aiSwitch_;

    /**
     * <code>optional bool aiSwitch = 2;</code>
     *
     * @return Whether the aiSwitch field is set.
     */
    @Override
    public boolean hasAiSwitch() {
        return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional bool aiSwitch = 2;</code>
     *
     * @return The aiSwitch.
     */
    @Override
    public boolean getAiSwitch() {
        return aiSwitch_;
    }

    /**
     * <code>optional bool aiSwitch = 2;</code>
     *
     * @param value The aiSwitch to set.
     */
    private void setAiSwitch(boolean value) {
        bitField0_ |= 0x00000002;
        aiSwitch_ = value;
    }

    /**
     * <code>optional bool aiSwitch = 2;</code>
     */
    private void clearAiSwitch() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aiSwitch_ = false;
    }

    public static final int AILEVEL_FIELD_NUMBER = 3;
    private int aiLevel_;

    /**
     * <code>optional int32 aiLevel = 3;</code>
     *
     * @return Whether the aiLevel field is set.
     */
    @Override
    public boolean hasAiLevel() {
        return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional int32 aiLevel = 3;</code>
     *
     * @return The aiLevel.
     */
    @Override
    public int getAiLevel() {
        return aiLevel_;
    }

    /**
     * <code>optional int32 aiLevel = 3;</code>
     *
     * @param value The aiLevel to set.
     */
    private void setAiLevel(int value) {
        bitField0_ |= 0x00000004;
        aiLevel_ = value;
    }

    /**
     * <code>optional int32 aiLevel = 3;</code>
     */
    private void clearAiLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        aiLevel_ = 0;
    }

    public static final int TYPETOP_FIELD_NUMBER = 4;
    private boolean typeTop_;

    /**
     * <code>optional bool typeTop = 4;</code>
     *
     * @return Whether the typeTop field is set.
     */
    @Override
    public boolean hasTypeTop() {
        return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     * <code>optional bool typeTop = 4;</code>
     *
     * @return The typeTop.
     */
    @Override
    public boolean getTypeTop() {
        return typeTop_;
    }

    /**
     * <code>optional bool typeTop = 4;</code>
     *
     * @param value The typeTop to set.
     */
    private void setTypeTop(boolean value) {
        bitField0_ |= 0x00000008;
        typeTop_ = value;
    }

    /**
     * <code>optional bool typeTop = 4;</code>
     */
    private void clearTypeTop() {
        bitField0_ = (bitField0_ & ~0x00000008);
        typeTop_ = false;
    }

    public static final int TYPESCROLL_FIELD_NUMBER = 5;
    private boolean typeScroll_;

    /**
     * <code>optional bool typeScroll = 5;</code>
     *
     * @return Whether the typeScroll field is set.
     */
    @Override
    public boolean hasTypeScroll() {
        return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     * <code>optional bool typeScroll = 5;</code>
     *
     * @return The typeScroll.
     */
    @Override
    public boolean getTypeScroll() {
        return typeScroll_;
    }

    /**
     * <code>optional bool typeScroll = 5;</code>
     *
     * @param value The typeScroll to set.
     */
    private void setTypeScroll(boolean value) {
        bitField0_ |= 0x00000010;
        typeScroll_ = value;
    }

    /**
     * <code>optional bool typeScroll = 5;</code>
     */
    private void clearTypeScroll() {
        bitField0_ = (bitField0_ & ~0x00000010);
        typeScroll_ = false;
    }

    public static final int TYPEBOTTOM_FIELD_NUMBER = 6;
    private boolean typeBottom_;

    /**
     * <code>optional bool typeBottom = 6;</code>
     *
     * @return Whether the typeBottom field is set.
     */
    @Override
    public boolean hasTypeBottom() {
        return ((bitField0_ & 0x00000020) != 0);
    }

    /**
     * <code>optional bool typeBottom = 6;</code>
     *
     * @return The typeBottom.
     */
    @Override
    public boolean getTypeBottom() {
        return typeBottom_;
    }

    /**
     * <code>optional bool typeBottom = 6;</code>
     *
     * @param value The typeBottom to set.
     */
    private void setTypeBottom(boolean value) {
        bitField0_ |= 0x00000020;
        typeBottom_ = value;
    }

    /**
     * <code>optional bool typeBottom = 6;</code>
     */
    private void clearTypeBottom() {
        bitField0_ = (bitField0_ & ~0x00000020);
        typeBottom_ = false;
    }

    public static final int TYPECOLOR_FIELD_NUMBER = 7;
    private boolean typeColor_;

    /**
     * <code>optional bool typeColor = 7;</code>
     *
     * @return Whether the typeColor field is set.
     */
    @Override
    public boolean hasTypeColor() {
        return ((bitField0_ & 0x00000040) != 0);
    }

    /**
     * <code>optional bool typeColor = 7;</code>
     *
     * @return The typeColor.
     */
    @Override
    public boolean getTypeColor() {
        return typeColor_;
    }

    /**
     * <code>optional bool typeColor = 7;</code>
     *
     * @param value The typeColor to set.
     */
    private void setTypeColor(boolean value) {
        bitField0_ |= 0x00000040;
        typeColor_ = value;
    }

    /**
     * <code>optional bool typeColor = 7;</code>
     */
    private void clearTypeColor() {
        bitField0_ = (bitField0_ & ~0x00000040);
        typeColor_ = false;
    }

    public static final int TYPESPECIAL_FIELD_NUMBER = 8;
    private boolean typeSpecial_;

    /**
     * <code>optional bool typeSpecial = 8;</code>
     *
     * @return Whether the typeSpecial field is set.
     */
    @Override
    public boolean hasTypeSpecial() {
        return ((bitField0_ & 0x00000080) != 0);
    }

    /**
     * <code>optional bool typeSpecial = 8;</code>
     *
     * @return The typeSpecial.
     */
    @Override
    public boolean getTypeSpecial() {
        return typeSpecial_;
    }

    /**
     * <code>optional bool typeSpecial = 8;</code>
     *
     * @param value The typeSpecial to set.
     */
    private void setTypeSpecial(boolean value) {
        bitField0_ |= 0x00000080;
        typeSpecial_ = value;
    }

    /**
     * <code>optional bool typeSpecial = 8;</code>
     */
    private void clearTypeSpecial() {
        bitField0_ = (bitField0_ & ~0x00000080);
        typeSpecial_ = false;
    }

    public static final int PREVENTSHADE_FIELD_NUMBER = 9;
    private boolean preventShade_;

    /**
     * <code>optional bool preventShade = 9;</code>
     *
     * @return Whether the preventShade field is set.
     */
    @Override
    public boolean hasPreventShade() {
        return ((bitField0_ & 0x00000100) != 0);
    }

    /**
     * <code>optional bool preventShade = 9;</code>
     *
     * @return The preventShade.
     */
    @Override
    public boolean getPreventShade() {
        return preventShade_;
    }

    /**
     * <code>optional bool preventShade = 9;</code>
     *
     * @param value The preventShade to set.
     */
    private void setPreventShade(boolean value) {
        bitField0_ |= 0x00000100;
        preventShade_ = value;
    }

    /**
     * <code>optional bool preventShade = 9;</code>
     */
    private void clearPreventShade() {
        bitField0_ = (bitField0_ & ~0x00000100);
        preventShade_ = false;
    }

    public static final int DMASK_FIELD_NUMBER = 10;
    private boolean dmask_;

    /**
     * <code>optional bool dmask = 10;</code>
     *
     * @return Whether the dmask field is set.
     */
    @Override
    public boolean hasDmask() {
        return ((bitField0_ & 0x00000200) != 0);
    }

    /**
     * <code>optional bool dmask = 10;</code>
     *
     * @return The dmask.
     */
    @Override
    public boolean getDmask() {
        return dmask_;
    }

    /**
     * <code>optional bool dmask = 10;</code>
     *
     * @param value The dmask to set.
     */
    private void setDmask(boolean value) {
        bitField0_ |= 0x00000200;
        dmask_ = value;
    }

    /**
     * <code>optional bool dmask = 10;</code>
     */
    private void clearDmask() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dmask_ = false;
    }

    public static final int OPACITY_FIELD_NUMBER = 11;
    private float opacity_;

    /**
     * <code>optional float opacity = 11;</code>
     *
     * @return Whether the opacity field is set.
     */
    @Override
    public boolean hasOpacity() {
        return ((bitField0_ & 0x00000400) != 0);
    }

    /**
     * <code>optional float opacity = 11;</code>
     *
     * @return The opacity.
     */
    @Override
    public float getOpacity() {
        return opacity_;
    }

    /**
     * <code>optional float opacity = 11;</code>
     *
     * @param value The opacity to set.
     */
    private void setOpacity(float value) {
        bitField0_ |= 0x00000400;
        opacity_ = value;
    }

    /**
     * <code>optional float opacity = 11;</code>
     */
    private void clearOpacity() {
        bitField0_ = (bitField0_ & ~0x00000400);
        opacity_ = 0F;
    }

    public static final int DMAREA_FIELD_NUMBER = 12;
    private int dmArea_;

    /**
     * <code>optional int32 dmArea = 12;</code>
     *
     * @return Whether the dmArea field is set.
     */
    @Override
    public boolean hasDmArea() {
        return ((bitField0_ & 0x00000800) != 0);
    }

    /**
     * <code>optional int32 dmArea = 12;</code>
     *
     * @return The dmArea.
     */
    @Override
    public int getDmArea() {
        return dmArea_;
    }

    /**
     * <code>optional int32 dmArea = 12;</code>
     *
     * @param value The dmArea to set.
     */
    private void setDmArea(int value) {
        bitField0_ |= 0x00000800;
        dmArea_ = value;
    }

    /**
     * <code>optional int32 dmArea = 12;</code>
     */
    private void clearDmArea() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dmArea_ = 0;
    }

    public static final int SPEEDPLUS_FIELD_NUMBER = 13;
    private float speedPlus_;

    /**
     * <code>optional float speedPlus = 13;</code>
     *
     * @return Whether the speedPlus field is set.
     */
    @Override
    public boolean hasSpeedPlus() {
        return ((bitField0_ & 0x00001000) != 0);
    }

    /**
     * <code>optional float speedPlus = 13;</code>
     *
     * @return The speedPlus.
     */
    @Override
    public float getSpeedPlus() {
        return speedPlus_;
    }

    /**
     * <code>optional float speedPlus = 13;</code>
     *
     * @param value The speedPlus to set.
     */
    private void setSpeedPlus(float value) {
        bitField0_ |= 0x00001000;
        speedPlus_ = value;
    }

    /**
     * <code>optional float speedPlus = 13;</code>
     */
    private void clearSpeedPlus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        speedPlus_ = 0F;
    }

    public static final int FONTSIZE_FIELD_NUMBER = 14;
    private float fontSize_;

    /**
     * <code>optional float fontSize = 14;</code>
     *
     * @return Whether the fontSize field is set.
     */
    @Override
    public boolean hasFontSize() {
        return ((bitField0_ & 0x00002000) != 0);
    }

    /**
     * <code>optional float fontSize = 14;</code>
     *
     * @return The fontSize.
     */
    @Override
    public float getFontSize() {
        return fontSize_;
    }

    /**
     * <code>optional float fontSize = 14;</code>
     *
     * @param value The fontSize to set.
     */
    private void setFontSize(float value) {
        bitField0_ |= 0x00002000;
        fontSize_ = value;
    }

    /**
     * <code>optional float fontSize = 14;</code>
     */
    private void clearFontSize() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fontSize_ = 0F;
    }

    public static final int FULLSCREENSYNC_FIELD_NUMBER = 15;
    private boolean fullScreenSync_;

    /**
     * <code>optional bool fullScreenSync = 15;</code>
     *
     * @return Whether the fullScreenSync field is set.
     */
    @Override
    public boolean hasFullScreenSync() {
        return ((bitField0_ & 0x00004000) != 0);
    }

    /**
     * <code>optional bool fullScreenSync = 15;</code>
     *
     * @return The fullScreenSync.
     */
    @Override
    public boolean getFullScreenSync() {
        return fullScreenSync_;
    }

    /**
     * <code>optional bool fullScreenSync = 15;</code>
     *
     * @param value The fullScreenSync to set.
     */
    private void setFullScreenSync(boolean value) {
        bitField0_ |= 0x00004000;
        fullScreenSync_ = value;
    }

    /**
     * <code>optional bool fullScreenSync = 15;</code>
     */
    private void clearFullScreenSync() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fullScreenSync_ = false;
    }

    public static final int SPEEDSYNC_FIELD_NUMBER = 16;
    private boolean speedSync_;

    /**
     * <code>optional bool speedSync = 16;</code>
     *
     * @return Whether the speedSync field is set.
     */
    @Override
    public boolean hasSpeedSync() {
        return ((bitField0_ & 0x00008000) != 0);
    }

    /**
     * <code>optional bool speedSync = 16;</code>
     *
     * @return The speedSync.
     */
    @Override
    public boolean getSpeedSync() {
        return speedSync_;
    }

    /**
     * <code>optional bool speedSync = 16;</code>
     *
     * @param value The speedSync to set.
     */
    private void setSpeedSync(boolean value) {
        bitField0_ |= 0x00008000;
        speedSync_ = value;
    }

    /**
     * <code>optional bool speedSync = 16;</code>
     */
    private void clearSpeedSync() {
        bitField0_ = (bitField0_ & ~0x00008000);
        speedSync_ = false;
    }

    public static final int FONTFAMILY_FIELD_NUMBER = 17;
    private String fontFamily_;

    /**
     * <code>optional string fontFamily = 17;</code>
     *
     * @return Whether the fontFamily field is set.
     */
    @Override
    public boolean hasFontFamily() {
        return ((bitField0_ & 0x00010000) != 0);
    }

    /**
     * <code>optional string fontFamily = 17;</code>
     *
     * @return The fontFamily.
     */
    @Override
    public String getFontFamily() {
        return fontFamily_;
    }

    /**
     * <code>optional string fontFamily = 17;</code>
     *
     * @return The bytes for fontFamily.
     */
    @Override
    public com.google.protobuf.ByteString
    getFontFamilyBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(fontFamily_);
    }

    /**
     * <code>optional string fontFamily = 17;</code>
     *
     * @param value The fontFamily to set.
     */
    private void setFontFamily(
            String value) {
        Class<?> valueClass = value.getClass();
        bitField0_ |= 0x00010000;
        fontFamily_ = value;
    }

    /**
     * <code>optional string fontFamily = 17;</code>
     */
    private void clearFontFamily() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fontFamily_ = getDefaultInstance().getFontFamily();
    }

    /**
     * <code>optional string fontFamily = 17;</code>
     *
     * @param value The bytes for fontFamily to set.
     */
    private void setFontFamilyBytes(
            com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        fontFamily_ = value.toStringUtf8();
        bitField0_ |= 0x00010000;
    }

    public static final int BOLD_FIELD_NUMBER = 18;
    private boolean bold_;

    /**
     * <code>optional bool bold = 18;</code>
     *
     * @return Whether the bold field is set.
     */
    @Override
    public boolean hasBold() {
        return ((bitField0_ & 0x00020000) != 0);
    }

    /**
     * <code>optional bool bold = 18;</code>
     *
     * @return The bold.
     */
    @Override
    public boolean getBold() {
        return bold_;
    }

    /**
     * <code>optional bool bold = 18;</code>
     *
     * @param value The bold to set.
     */
    private void setBold(boolean value) {
        bitField0_ |= 0x00020000;
        bold_ = value;
    }

    /**
     * <code>optional bool bold = 18;</code>
     */
    private void clearBold() {
        bitField0_ = (bitField0_ & ~0x00020000);
        bold_ = false;
    }

    public static final int FONTBORDER_FIELD_NUMBER = 19;
    private int fontBorder_;

    /**
     * <code>optional int32 fontBorder = 19;</code>
     *
     * @return Whether the fontBorder field is set.
     */
    @Override
    public boolean hasFontBorder() {
        return ((bitField0_ & 0x00040000) != 0);
    }

    /**
     * <code>optional int32 fontBorder = 19;</code>
     *
     * @return The fontBorder.
     */
    @Override
    public int getFontBorder() {
        return fontBorder_;
    }

    /**
     * <code>optional int32 fontBorder = 19;</code>
     *
     * @param value The fontBorder to set.
     */
    private void setFontBorder(int value) {
        bitField0_ |= 0x00040000;
        fontBorder_ = value;
    }

    /**
     * <code>optional int32 fontBorder = 19;</code>
     */
    private void clearFontBorder() {
        bitField0_ = (bitField0_ & ~0x00040000);
        fontBorder_ = 0;
    }

    public static final int DRAWTYPE_FIELD_NUMBER = 20;
    private String drawType_;

    /**
     * <code>optional string drawType = 20;</code>
     *
     * @return Whether the drawType field is set.
     */
    @Override
    public boolean hasDrawType() {
        return ((bitField0_ & 0x00080000) != 0);
    }

    /**
     * <code>optional string drawType = 20;</code>
     *
     * @return The drawType.
     */
    @Override
    public String getDrawType() {
        return drawType_;
    }

    /**
     * <code>optional string drawType = 20;</code>
     *
     * @return The bytes for drawType.
     */
    @Override
    public com.google.protobuf.ByteString
    getDrawTypeBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(drawType_);
    }

    /**
     * <code>optional string drawType = 20;</code>
     *
     * @param value The drawType to set.
     */
    private void setDrawType(
            String value) {
        Class<?> valueClass = value.getClass();
        bitField0_ |= 0x00080000;
        drawType_ = value;
    }

    /**
     * <code>optional string drawType = 20;</code>
     */
    private void clearDrawType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        drawType_ = getDefaultInstance().getDrawType();
    }

    /**
     * <code>optional string drawType = 20;</code>
     *
     * @param value The bytes for drawType to set.
     */
    private void setDrawTypeBytes(
            com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        drawType_ = value.toStringUtf8();
        bitField0_ |= 0x00080000;
    }

    public static final int SENIORMODESWITCH_FIELD_NUMBER = 21;
    private int seniorModeSwitch_;

    /**
     * <code>optional int32 seniorModeSwitch = 21;</code>
     *
     * @return Whether the seniorModeSwitch field is set.
     */
    @Override
    public boolean hasSeniorModeSwitch() {
        return ((bitField0_ & 0x00100000) != 0);
    }

    /**
     * <code>optional int32 seniorModeSwitch = 21;</code>
     *
     * @return The seniorModeSwitch.
     */
    @Override
    public int getSeniorModeSwitch() {
        return seniorModeSwitch_;
    }

    /**
     * <code>optional int32 seniorModeSwitch = 21;</code>
     *
     * @param value The seniorModeSwitch to set.
     */
    private void setSeniorModeSwitch(int value) {
        bitField0_ |= 0x00100000;
        seniorModeSwitch_ = value;
    }

    /**
     * <code>optional int32 seniorModeSwitch = 21;</code>
     */
    private void clearSeniorModeSwitch() {
        bitField0_ = (bitField0_ & ~0x00100000);
        seniorModeSwitch_ = 0;
    }

    public static DanmuWebPlayerConfig parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmuWebPlayerConfig parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmuWebPlayerConfig parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmuWebPlayerConfig parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmuWebPlayerConfig parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmuWebPlayerConfig parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmuWebPlayerConfig parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static DanmuWebPlayerConfig parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static DanmuWebPlayerConfig parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static DanmuWebPlayerConfig parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static DanmuWebPlayerConfig parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static DanmuWebPlayerConfig parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(DanmuWebPlayerConfig prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    DanmuWebPlayerConfig, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig)
            DanmuWebPlayerConfigOrBuilder {
        // Construct using com.muedsa.bilibililiveapiclient.model.danmaku.DanmuWebPlayerConfig.newBuilder()
        private Builder() {
            super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional bool dmSwitch = 1;</code>
         *
         * @return Whether the dmSwitch field is set.
         */
        @Override
        public boolean hasDmSwitch() {
            return instance.hasDmSwitch();
        }

        /**
         * <code>optional bool dmSwitch = 1;</code>
         *
         * @return The dmSwitch.
         */
        @Override
        public boolean getDmSwitch() {
            return instance.getDmSwitch();
        }

        /**
         * <code>optional bool dmSwitch = 1;</code>
         *
         * @param value The dmSwitch to set.
         * @return This builder for chaining.
         */
        public Builder setDmSwitch(boolean value) {
            copyOnWrite();
            instance.setDmSwitch(value);
            return this;
        }

        /**
         * <code>optional bool dmSwitch = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDmSwitch() {
            copyOnWrite();
            instance.clearDmSwitch();
            return this;
        }

        /**
         * <code>optional bool aiSwitch = 2;</code>
         *
         * @return Whether the aiSwitch field is set.
         */
        @Override
        public boolean hasAiSwitch() {
            return instance.hasAiSwitch();
        }

        /**
         * <code>optional bool aiSwitch = 2;</code>
         *
         * @return The aiSwitch.
         */
        @Override
        public boolean getAiSwitch() {
            return instance.getAiSwitch();
        }

        /**
         * <code>optional bool aiSwitch = 2;</code>
         *
         * @param value The aiSwitch to set.
         * @return This builder for chaining.
         */
        public Builder setAiSwitch(boolean value) {
            copyOnWrite();
            instance.setAiSwitch(value);
            return this;
        }

        /**
         * <code>optional bool aiSwitch = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearAiSwitch() {
            copyOnWrite();
            instance.clearAiSwitch();
            return this;
        }

        /**
         * <code>optional int32 aiLevel = 3;</code>
         *
         * @return Whether the aiLevel field is set.
         */
        @Override
        public boolean hasAiLevel() {
            return instance.hasAiLevel();
        }

        /**
         * <code>optional int32 aiLevel = 3;</code>
         *
         * @return The aiLevel.
         */
        @Override
        public int getAiLevel() {
            return instance.getAiLevel();
        }

        /**
         * <code>optional int32 aiLevel = 3;</code>
         *
         * @param value The aiLevel to set.
         * @return This builder for chaining.
         */
        public Builder setAiLevel(int value) {
            copyOnWrite();
            instance.setAiLevel(value);
            return this;
        }

        /**
         * <code>optional int32 aiLevel = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearAiLevel() {
            copyOnWrite();
            instance.clearAiLevel();
            return this;
        }

        /**
         * <code>optional bool typeTop = 4;</code>
         *
         * @return Whether the typeTop field is set.
         */
        @Override
        public boolean hasTypeTop() {
            return instance.hasTypeTop();
        }

        /**
         * <code>optional bool typeTop = 4;</code>
         *
         * @return The typeTop.
         */
        @Override
        public boolean getTypeTop() {
            return instance.getTypeTop();
        }

        /**
         * <code>optional bool typeTop = 4;</code>
         *
         * @param value The typeTop to set.
         * @return This builder for chaining.
         */
        public Builder setTypeTop(boolean value) {
            copyOnWrite();
            instance.setTypeTop(value);
            return this;
        }

        /**
         * <code>optional bool typeTop = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypeTop() {
            copyOnWrite();
            instance.clearTypeTop();
            return this;
        }

        /**
         * <code>optional bool typeScroll = 5;</code>
         *
         * @return Whether the typeScroll field is set.
         */
        @Override
        public boolean hasTypeScroll() {
            return instance.hasTypeScroll();
        }

        /**
         * <code>optional bool typeScroll = 5;</code>
         *
         * @return The typeScroll.
         */
        @Override
        public boolean getTypeScroll() {
            return instance.getTypeScroll();
        }

        /**
         * <code>optional bool typeScroll = 5;</code>
         *
         * @param value The typeScroll to set.
         * @return This builder for chaining.
         */
        public Builder setTypeScroll(boolean value) {
            copyOnWrite();
            instance.setTypeScroll(value);
            return this;
        }

        /**
         * <code>optional bool typeScroll = 5;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypeScroll() {
            copyOnWrite();
            instance.clearTypeScroll();
            return this;
        }

        /**
         * <code>optional bool typeBottom = 6;</code>
         *
         * @return Whether the typeBottom field is set.
         */
        @Override
        public boolean hasTypeBottom() {
            return instance.hasTypeBottom();
        }

        /**
         * <code>optional bool typeBottom = 6;</code>
         *
         * @return The typeBottom.
         */
        @Override
        public boolean getTypeBottom() {
            return instance.getTypeBottom();
        }

        /**
         * <code>optional bool typeBottom = 6;</code>
         *
         * @param value The typeBottom to set.
         * @return This builder for chaining.
         */
        public Builder setTypeBottom(boolean value) {
            copyOnWrite();
            instance.setTypeBottom(value);
            return this;
        }

        /**
         * <code>optional bool typeBottom = 6;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypeBottom() {
            copyOnWrite();
            instance.clearTypeBottom();
            return this;
        }

        /**
         * <code>optional bool typeColor = 7;</code>
         *
         * @return Whether the typeColor field is set.
         */
        @Override
        public boolean hasTypeColor() {
            return instance.hasTypeColor();
        }

        /**
         * <code>optional bool typeColor = 7;</code>
         *
         * @return The typeColor.
         */
        @Override
        public boolean getTypeColor() {
            return instance.getTypeColor();
        }

        /**
         * <code>optional bool typeColor = 7;</code>
         *
         * @param value The typeColor to set.
         * @return This builder for chaining.
         */
        public Builder setTypeColor(boolean value) {
            copyOnWrite();
            instance.setTypeColor(value);
            return this;
        }

        /**
         * <code>optional bool typeColor = 7;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypeColor() {
            copyOnWrite();
            instance.clearTypeColor();
            return this;
        }

        /**
         * <code>optional bool typeSpecial = 8;</code>
         *
         * @return Whether the typeSpecial field is set.
         */
        @Override
        public boolean hasTypeSpecial() {
            return instance.hasTypeSpecial();
        }

        /**
         * <code>optional bool typeSpecial = 8;</code>
         *
         * @return The typeSpecial.
         */
        @Override
        public boolean getTypeSpecial() {
            return instance.getTypeSpecial();
        }

        /**
         * <code>optional bool typeSpecial = 8;</code>
         *
         * @param value The typeSpecial to set.
         * @return This builder for chaining.
         */
        public Builder setTypeSpecial(boolean value) {
            copyOnWrite();
            instance.setTypeSpecial(value);
            return this;
        }

        /**
         * <code>optional bool typeSpecial = 8;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypeSpecial() {
            copyOnWrite();
            instance.clearTypeSpecial();
            return this;
        }

        /**
         * <code>optional bool preventShade = 9;</code>
         *
         * @return Whether the preventShade field is set.
         */
        @Override
        public boolean hasPreventShade() {
            return instance.hasPreventShade();
        }

        /**
         * <code>optional bool preventShade = 9;</code>
         *
         * @return The preventShade.
         */
        @Override
        public boolean getPreventShade() {
            return instance.getPreventShade();
        }

        /**
         * <code>optional bool preventShade = 9;</code>
         *
         * @param value The preventShade to set.
         * @return This builder for chaining.
         */
        public Builder setPreventShade(boolean value) {
            copyOnWrite();
            instance.setPreventShade(value);
            return this;
        }

        /**
         * <code>optional bool preventShade = 9;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearPreventShade() {
            copyOnWrite();
            instance.clearPreventShade();
            return this;
        }

        /**
         * <code>optional bool dmask = 10;</code>
         *
         * @return Whether the dmask field is set.
         */
        @Override
        public boolean hasDmask() {
            return instance.hasDmask();
        }

        /**
         * <code>optional bool dmask = 10;</code>
         *
         * @return The dmask.
         */
        @Override
        public boolean getDmask() {
            return instance.getDmask();
        }

        /**
         * <code>optional bool dmask = 10;</code>
         *
         * @param value The dmask to set.
         * @return This builder for chaining.
         */
        public Builder setDmask(boolean value) {
            copyOnWrite();
            instance.setDmask(value);
            return this;
        }

        /**
         * <code>optional bool dmask = 10;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDmask() {
            copyOnWrite();
            instance.clearDmask();
            return this;
        }

        /**
         * <code>optional float opacity = 11;</code>
         *
         * @return Whether the opacity field is set.
         */
        @Override
        public boolean hasOpacity() {
            return instance.hasOpacity();
        }

        /**
         * <code>optional float opacity = 11;</code>
         *
         * @return The opacity.
         */
        @Override
        public float getOpacity() {
            return instance.getOpacity();
        }

        /**
         * <code>optional float opacity = 11;</code>
         *
         * @param value The opacity to set.
         * @return This builder for chaining.
         */
        public Builder setOpacity(float value) {
            copyOnWrite();
            instance.setOpacity(value);
            return this;
        }

        /**
         * <code>optional float opacity = 11;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearOpacity() {
            copyOnWrite();
            instance.clearOpacity();
            return this;
        }

        /**
         * <code>optional int32 dmArea = 12;</code>
         *
         * @return Whether the dmArea field is set.
         */
        @Override
        public boolean hasDmArea() {
            return instance.hasDmArea();
        }

        /**
         * <code>optional int32 dmArea = 12;</code>
         *
         * @return The dmArea.
         */
        @Override
        public int getDmArea() {
            return instance.getDmArea();
        }

        /**
         * <code>optional int32 dmArea = 12;</code>
         *
         * @param value The dmArea to set.
         * @return This builder for chaining.
         */
        public Builder setDmArea(int value) {
            copyOnWrite();
            instance.setDmArea(value);
            return this;
        }

        /**
         * <code>optional int32 dmArea = 12;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDmArea() {
            copyOnWrite();
            instance.clearDmArea();
            return this;
        }

        /**
         * <code>optional float speedPlus = 13;</code>
         *
         * @return Whether the speedPlus field is set.
         */
        @Override
        public boolean hasSpeedPlus() {
            return instance.hasSpeedPlus();
        }

        /**
         * <code>optional float speedPlus = 13;</code>
         *
         * @return The speedPlus.
         */
        @Override
        public float getSpeedPlus() {
            return instance.getSpeedPlus();
        }

        /**
         * <code>optional float speedPlus = 13;</code>
         *
         * @param value The speedPlus to set.
         * @return This builder for chaining.
         */
        public Builder setSpeedPlus(float value) {
            copyOnWrite();
            instance.setSpeedPlus(value);
            return this;
        }

        /**
         * <code>optional float speedPlus = 13;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSpeedPlus() {
            copyOnWrite();
            instance.clearSpeedPlus();
            return this;
        }

        /**
         * <code>optional float fontSize = 14;</code>
         *
         * @return Whether the fontSize field is set.
         */
        @Override
        public boolean hasFontSize() {
            return instance.hasFontSize();
        }

        /**
         * <code>optional float fontSize = 14;</code>
         *
         * @return The fontSize.
         */
        @Override
        public float getFontSize() {
            return instance.getFontSize();
        }

        /**
         * <code>optional float fontSize = 14;</code>
         *
         * @param value The fontSize to set.
         * @return This builder for chaining.
         */
        public Builder setFontSize(float value) {
            copyOnWrite();
            instance.setFontSize(value);
            return this;
        }

        /**
         * <code>optional float fontSize = 14;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearFontSize() {
            copyOnWrite();
            instance.clearFontSize();
            return this;
        }

        /**
         * <code>optional bool fullScreenSync = 15;</code>
         *
         * @return Whether the fullScreenSync field is set.
         */
        @Override
        public boolean hasFullScreenSync() {
            return instance.hasFullScreenSync();
        }

        /**
         * <code>optional bool fullScreenSync = 15;</code>
         *
         * @return The fullScreenSync.
         */
        @Override
        public boolean getFullScreenSync() {
            return instance.getFullScreenSync();
        }

        /**
         * <code>optional bool fullScreenSync = 15;</code>
         *
         * @param value The fullScreenSync to set.
         * @return This builder for chaining.
         */
        public Builder setFullScreenSync(boolean value) {
            copyOnWrite();
            instance.setFullScreenSync(value);
            return this;
        }

        /**
         * <code>optional bool fullScreenSync = 15;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearFullScreenSync() {
            copyOnWrite();
            instance.clearFullScreenSync();
            return this;
        }

        /**
         * <code>optional bool speedSync = 16;</code>
         *
         * @return Whether the speedSync field is set.
         */
        @Override
        public boolean hasSpeedSync() {
            return instance.hasSpeedSync();
        }

        /**
         * <code>optional bool speedSync = 16;</code>
         *
         * @return The speedSync.
         */
        @Override
        public boolean getSpeedSync() {
            return instance.getSpeedSync();
        }

        /**
         * <code>optional bool speedSync = 16;</code>
         *
         * @param value The speedSync to set.
         * @return This builder for chaining.
         */
        public Builder setSpeedSync(boolean value) {
            copyOnWrite();
            instance.setSpeedSync(value);
            return this;
        }

        /**
         * <code>optional bool speedSync = 16;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSpeedSync() {
            copyOnWrite();
            instance.clearSpeedSync();
            return this;
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @return Whether the fontFamily field is set.
         */
        @Override
        public boolean hasFontFamily() {
            return instance.hasFontFamily();
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @return The fontFamily.
         */
        @Override
        public String getFontFamily() {
            return instance.getFontFamily();
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @return The bytes for fontFamily.
         */
        @Override
        public com.google.protobuf.ByteString
        getFontFamilyBytes() {
            return instance.getFontFamilyBytes();
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @param value The fontFamily to set.
         * @return This builder for chaining.
         */
        public Builder setFontFamily(
                String value) {
            copyOnWrite();
            instance.setFontFamily(value);
            return this;
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearFontFamily() {
            copyOnWrite();
            instance.clearFontFamily();
            return this;
        }

        /**
         * <code>optional string fontFamily = 17;</code>
         *
         * @param value The bytes for fontFamily to set.
         * @return This builder for chaining.
         */
        public Builder setFontFamilyBytes(
                com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setFontFamilyBytes(value);
            return this;
        }

        /**
         * <code>optional bool bold = 18;</code>
         *
         * @return Whether the bold field is set.
         */
        @Override
        public boolean hasBold() {
            return instance.hasBold();
        }

        /**
         * <code>optional bool bold = 18;</code>
         *
         * @return The bold.
         */
        @Override
        public boolean getBold() {
            return instance.getBold();
        }

        /**
         * <code>optional bool bold = 18;</code>
         *
         * @param value The bold to set.
         * @return This builder for chaining.
         */
        public Builder setBold(boolean value) {
            copyOnWrite();
            instance.setBold(value);
            return this;
        }

        /**
         * <code>optional bool bold = 18;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearBold() {
            copyOnWrite();
            instance.clearBold();
            return this;
        }

        /**
         * <code>optional int32 fontBorder = 19;</code>
         *
         * @return Whether the fontBorder field is set.
         */
        @Override
        public boolean hasFontBorder() {
            return instance.hasFontBorder();
        }

        /**
         * <code>optional int32 fontBorder = 19;</code>
         *
         * @return The fontBorder.
         */
        @Override
        public int getFontBorder() {
            return instance.getFontBorder();
        }

        /**
         * <code>optional int32 fontBorder = 19;</code>
         *
         * @param value The fontBorder to set.
         * @return This builder for chaining.
         */
        public Builder setFontBorder(int value) {
            copyOnWrite();
            instance.setFontBorder(value);
            return this;
        }

        /**
         * <code>optional int32 fontBorder = 19;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearFontBorder() {
            copyOnWrite();
            instance.clearFontBorder();
            return this;
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @return Whether the drawType field is set.
         */
        @Override
        public boolean hasDrawType() {
            return instance.hasDrawType();
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @return The drawType.
         */
        @Override
        public String getDrawType() {
            return instance.getDrawType();
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @return The bytes for drawType.
         */
        @Override
        public com.google.protobuf.ByteString
        getDrawTypeBytes() {
            return instance.getDrawTypeBytes();
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @param value The drawType to set.
         * @return This builder for chaining.
         */
        public Builder setDrawType(
                String value) {
            copyOnWrite();
            instance.setDrawType(value);
            return this;
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDrawType() {
            copyOnWrite();
            instance.clearDrawType();
            return this;
        }

        /**
         * <code>optional string drawType = 20;</code>
         *
         * @param value The bytes for drawType to set.
         * @return This builder for chaining.
         */
        public Builder setDrawTypeBytes(
                com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setDrawTypeBytes(value);
            return this;
        }

        /**
         * <code>optional int32 seniorModeSwitch = 21;</code>
         *
         * @return Whether the seniorModeSwitch field is set.
         */
        @Override
        public boolean hasSeniorModeSwitch() {
            return instance.hasSeniorModeSwitch();
        }

        /**
         * <code>optional int32 seniorModeSwitch = 21;</code>
         *
         * @return The seniorModeSwitch.
         */
        @Override
        public int getSeniorModeSwitch() {
            return instance.getSeniorModeSwitch();
        }

        /**
         * <code>optional int32 seniorModeSwitch = 21;</code>
         *
         * @param value The seniorModeSwitch to set.
         * @return This builder for chaining.
         */
        public Builder setSeniorModeSwitch(int value) {
            copyOnWrite();
            instance.setSeniorModeSwitch(value);
            return this;
        }

        /**
         * <code>optional int32 seniorModeSwitch = 21;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSeniorModeSwitch() {
            copyOnWrite();
            instance.clearSeniorModeSwitch();
            return this;
        }

        // @@protoc_insertion_point(builder_scope:com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig)
    }

    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
        switch (method) {
            case NEW_MUTABLE_INSTANCE: {
                return new DanmuWebPlayerConfig();
            }
            case NEW_BUILDER: {
                return new Builder();
            }
            case BUILD_MESSAGE_INFO: {
                Object[] objects = new Object[]{
                        "bitField0_",
                        "dmSwitch_",
                        "aiSwitch_",
                        "aiLevel_",
                        "typeTop_",
                        "typeScroll_",
                        "typeBottom_",
                        "typeColor_",
                        "typeSpecial_",
                        "preventShade_",
                        "dmask_",
                        "opacity_",
                        "dmArea_",
                        "speedPlus_",
                        "fontSize_",
                        "fullScreenSync_",
                        "speedSync_",
                        "fontFamily_",
                        "bold_",
                        "fontBorder_",
                        "drawType_",
                        "seniorModeSwitch_",
                };
                String info =
                        "\u0000\u0015\u0000\u0001\u0001\u0015\u0015\u0000\u0000\u0000\u0001\u1007\u0000\u0002" +
                                "\u1007\u0001\u0003\u1004\u0002\u0004\u1007\u0003\u0005\u1007\u0004\u0006\u1007\u0005" +
                                "\u0007\u1007\u0006\b\u1007\u0007\t\u1007\b\n\u1007\t\u000b\u1001\n\f\u1004\u000b" +
                                "\r\u1001\f\u000e\u1001\r\u000f\u1007\u000e\u0010\u1007\u000f\u0011\u1208\u0010\u0012" +
                                "\u1007\u0011\u0013\u1004\u0012\u0014\u1208\u0013\u0015\u1004\u0014";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
            case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
                com.google.protobuf.Parser<DanmuWebPlayerConfig> parser = PARSER;
                if (parser == null) {
                    synchronized (DanmuWebPlayerConfig.class) {
                        parser = PARSER;
                        if (parser == null) {
                            parser =
                                    new DefaultInstanceBasedParser<DanmuWebPlayerConfig>(
                                            DEFAULT_INSTANCE);
                            PARSER = parser;
                        }
                    }
                }
                return parser;
            }
            case GET_MEMOIZED_IS_INITIALIZED: {
                return (byte) 1;
            }
            case SET_MEMOIZED_IS_INITIALIZED: {
                return null;
            }
        }
        throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.muedsa.bilibililiveapiclient.model.DanmuWebPlayerConfig)
    private static final DanmuWebPlayerConfig DEFAULT_INSTANCE;

    static {
        DanmuWebPlayerConfig defaultInstance = new DanmuWebPlayerConfig();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
                DanmuWebPlayerConfig.class, defaultInstance);
    }

    public static DanmuWebPlayerConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DanmuWebPlayerConfig> PARSER;

    public static com.google.protobuf.Parser<DanmuWebPlayerConfig> parser() {
        return DEFAULT_INSTANCE.getParserForType();
    }
}

