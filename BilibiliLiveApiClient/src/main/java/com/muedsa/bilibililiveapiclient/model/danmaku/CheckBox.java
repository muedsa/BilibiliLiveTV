// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: danmaku.proto

package com.muedsa.bilibililiveapiclient.model.danmaku;

/**
 * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.CheckBox}
 */
public final class CheckBox extends
        com.google.protobuf.GeneratedMessageLite<
                CheckBox, CheckBox.Builder> implements
        // @@protoc_insertion_point(message_implements:com.muedsa.bilibililiveapiclient.model.CheckBox)
        CheckBoxOrBuilder {
    private CheckBox() {
        text_ = "";
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private String text_;

    /**
     * <code>optional string text = 1;</code>
     *
     * @return Whether the text field is set.
     */
    @Override
    public boolean hasText() {
        return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>optional string text = 1;</code>
     *
     * @return The text.
     */
    @Override
    public String getText() {
        return text_;
    }

    /**
     * <code>optional string text = 1;</code>
     *
     * @return The bytes for text.
     */
    @Override
    public com.google.protobuf.ByteString
    getTextBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(text_);
    }

    /**
     * <code>optional string text = 1;</code>
     *
     * @param value The text to set.
     */
    private void setText(
            String value) {
        Class<?> valueClass = value.getClass();
        bitField0_ |= 0x00000001;
        text_ = value;
    }

    /**
     * <code>optional string text = 1;</code>
     */
    private void clearText() {
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = getDefaultInstance().getText();
    }

    /**
     * <code>optional string text = 1;</code>
     *
     * @param value The bytes for text to set.
     */
    private void setTextBytes(
            com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        text_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     *
     * @return Whether the type field is set.
     */
    @Override
    public boolean hasType() {
        return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @Override
    public int getTypeValue() {
        return type_;
    }

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     *
     * @return The type.
     */
    @Override
    public CheckboxType getType() {
        CheckboxType result = CheckboxType.forNumber(type_);
        return result == null ? CheckboxType.UNRECOGNIZED : result;
    }

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     *
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
    }

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     *
     * @param value The type to set.
     */
    private void setType(CheckboxType value) {
        type_ = value.getNumber();
        bitField0_ |= 0x00000002;
    }

    /**
     * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
     */
    private void clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
    }

    public static final int DEFAULTVALUE_FIELD_NUMBER = 3;
    private boolean defaultValue_;

    /**
     * <code>optional bool defaultValue = 3;</code>
     *
     * @return Whether the defaultValue field is set.
     */
    @Override
    public boolean hasDefaultValue() {
        return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional bool defaultValue = 3;</code>
     *
     * @return The defaultValue.
     */
    @Override
    public boolean getDefaultValue() {
        return defaultValue_;
    }

    /**
     * <code>optional bool defaultValue = 3;</code>
     *
     * @param value The defaultValue to set.
     */
    private void setDefaultValue(boolean value) {
        bitField0_ |= 0x00000004;
        defaultValue_ = value;
    }

    /**
     * <code>optional bool defaultValue = 3;</code>
     */
    private void clearDefaultValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defaultValue_ = false;
    }

    public static final int SHOW_FIELD_NUMBER = 4;
    private boolean show_;

    /**
     * <code>optional bool show = 4;</code>
     *
     * @return Whether the show field is set.
     */
    @Override
    public boolean hasShow() {
        return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     * <code>optional bool show = 4;</code>
     *
     * @return The show.
     */
    @Override
    public boolean getShow() {
        return show_;
    }

    /**
     * <code>optional bool show = 4;</code>
     *
     * @param value The show to set.
     */
    private void setShow(boolean value) {
        bitField0_ |= 0x00000008;
        show_ = value;
    }

    /**
     * <code>optional bool show = 4;</code>
     */
    private void clearShow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        show_ = false;
    }

    public static CheckBox parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static CheckBox parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static CheckBox parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static CheckBox parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static CheckBox parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static CheckBox parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static CheckBox parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static CheckBox parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static CheckBox parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static CheckBox parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static CheckBox parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static CheckBox parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(CheckBox prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.CheckBox}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    CheckBox, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.muedsa.bilibililiveapiclient.model.CheckBox)
            CheckBoxOrBuilder {
        // Construct using com.muedsa.bilibililiveapiclient.model.danmaku.CheckBox.newBuilder()
        private Builder() {
            super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string text = 1;</code>
         *
         * @return Whether the text field is set.
         */
        @Override
        public boolean hasText() {
            return instance.hasText();
        }

        /**
         * <code>optional string text = 1;</code>
         *
         * @return The text.
         */
        @Override
        public String getText() {
            return instance.getText();
        }

        /**
         * <code>optional string text = 1;</code>
         *
         * @return The bytes for text.
         */
        @Override
        public com.google.protobuf.ByteString
        getTextBytes() {
            return instance.getTextBytes();
        }

        /**
         * <code>optional string text = 1;</code>
         *
         * @param value The text to set.
         * @return This builder for chaining.
         */
        public Builder setText(
                String value) {
            copyOnWrite();
            instance.setText(value);
            return this;
        }

        /**
         * <code>optional string text = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearText() {
            copyOnWrite();
            instance.clearText();
            return this;
        }

        /**
         * <code>optional string text = 1;</code>
         *
         * @param value The bytes for text to set.
         * @return This builder for chaining.
         */
        public Builder setTextBytes(
                com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setTextBytes(value);
            return this;
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @return Whether the type field is set.
         */
        @Override
        public boolean hasType() {
            return instance.hasType();
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @return The enum numeric value on the wire for type.
         */
        @Override
        public int getTypeValue() {
            return instance.getTypeValue();
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
            copyOnWrite();
            instance.setTypeValue(value);
            return this;
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @return The type.
         */
        @Override
        public CheckboxType getType() {
            return instance.getType();
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setType(CheckboxType value) {
            copyOnWrite();
            instance.setType(value);
            return this;
        }

        /**
         * <code>optional .com.muedsa.bilibililiveapiclient.model.CheckboxType type = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearType() {
            copyOnWrite();
            instance.clearType();
            return this;
        }

        /**
         * <code>optional bool defaultValue = 3;</code>
         *
         * @return Whether the defaultValue field is set.
         */
        @Override
        public boolean hasDefaultValue() {
            return instance.hasDefaultValue();
        }

        /**
         * <code>optional bool defaultValue = 3;</code>
         *
         * @return The defaultValue.
         */
        @Override
        public boolean getDefaultValue() {
            return instance.getDefaultValue();
        }

        /**
         * <code>optional bool defaultValue = 3;</code>
         *
         * @param value The defaultValue to set.
         * @return This builder for chaining.
         */
        public Builder setDefaultValue(boolean value) {
            copyOnWrite();
            instance.setDefaultValue(value);
            return this;
        }

        /**
         * <code>optional bool defaultValue = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDefaultValue() {
            copyOnWrite();
            instance.clearDefaultValue();
            return this;
        }

        /**
         * <code>optional bool show = 4;</code>
         *
         * @return Whether the show field is set.
         */
        @Override
        public boolean hasShow() {
            return instance.hasShow();
        }

        /**
         * <code>optional bool show = 4;</code>
         *
         * @return The show.
         */
        @Override
        public boolean getShow() {
            return instance.getShow();
        }

        /**
         * <code>optional bool show = 4;</code>
         *
         * @param value The show to set.
         * @return This builder for chaining.
         */
        public Builder setShow(boolean value) {
            copyOnWrite();
            instance.setShow(value);
            return this;
        }

        /**
         * <code>optional bool show = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearShow() {
            copyOnWrite();
            instance.clearShow();
            return this;
        }

        // @@protoc_insertion_point(builder_scope:com.muedsa.bilibililiveapiclient.model.CheckBox)
    }

    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
        switch (method) {
            case NEW_MUTABLE_INSTANCE: {
                return new CheckBox();
            }
            case NEW_BUILDER: {
                return new Builder();
            }
            case BUILD_MESSAGE_INFO: {
                Object[] objects = new Object[]{
                        "bitField0_",
                        "text_",
                        "type_",
                        "defaultValue_",
                        "show_",
                };
                String info =
                        "\u0000\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u1208\u0000\u0002" +
                                "\u100c\u0001\u0003\u1007\u0002\u0004\u1007\u0003";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
            case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
                com.google.protobuf.Parser<CheckBox> parser = PARSER;
                if (parser == null) {
                    synchronized (CheckBox.class) {
                        parser = PARSER;
                        if (parser == null) {
                            parser =
                                    new DefaultInstanceBasedParser<CheckBox>(
                                            DEFAULT_INSTANCE);
                            PARSER = parser;
                        }
                    }
                }
                return parser;
            }
            case GET_MEMOIZED_IS_INITIALIZED: {
                return (byte) 1;
            }
            case SET_MEMOIZED_IS_INITIALIZED: {
                return null;
            }
        }
        throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.muedsa.bilibililiveapiclient.model.CheckBox)
    private static final CheckBox DEFAULT_INSTANCE;

    static {
        CheckBox defaultInstance = new CheckBox();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
                CheckBox.class, defaultInstance);
    }

    public static CheckBox getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CheckBox> PARSER;

    public static com.google.protobuf.Parser<CheckBox> parser() {
        return DEFAULT_INSTANCE.getParserForType();
    }
}

