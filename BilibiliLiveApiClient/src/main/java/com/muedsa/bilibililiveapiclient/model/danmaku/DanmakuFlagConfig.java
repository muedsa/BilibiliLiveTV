// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: danmaku.proto

package com.muedsa.bilibililiveapiclient.model.danmaku;

/**
 * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig}
 */
public final class DanmakuFlagConfig extends
        com.google.protobuf.GeneratedMessageLite<
                DanmakuFlagConfig, DanmakuFlagConfig.Builder> implements
        // @@protoc_insertion_point(message_implements:com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig)
        DanmakuFlagConfigOrBuilder {
    private DanmakuFlagConfig() {
        recText_ = "";
    }

    private int bitField0_;
    public static final int RECFLAG_FIELD_NUMBER = 1;
    private int recFlag_;

    /**
     * <code>optional int32 recFlag = 1;</code>
     *
     * @return Whether the recFlag field is set.
     */
    @Override
    public boolean hasRecFlag() {
        return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     * <code>optional int32 recFlag = 1;</code>
     *
     * @return The recFlag.
     */
    @Override
    public int getRecFlag() {
        return recFlag_;
    }

    /**
     * <code>optional int32 recFlag = 1;</code>
     *
     * @param value The recFlag to set.
     */
    private void setRecFlag(int value) {
        bitField0_ |= 0x00000001;
        recFlag_ = value;
    }

    /**
     * <code>optional int32 recFlag = 1;</code>
     */
    private void clearRecFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recFlag_ = 0;
    }

    public static final int RECTEXT_FIELD_NUMBER = 2;
    private String recText_;

    /**
     * <code>optional string recText = 2;</code>
     *
     * @return Whether the recText field is set.
     */
    @Override
    public boolean hasRecText() {
        return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     * <code>optional string recText = 2;</code>
     *
     * @return The recText.
     */
    @Override
    public String getRecText() {
        return recText_;
    }

    /**
     * <code>optional string recText = 2;</code>
     *
     * @return The bytes for recText.
     */
    @Override
    public com.google.protobuf.ByteString
    getRecTextBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(recText_);
    }

    /**
     * <code>optional string recText = 2;</code>
     *
     * @param value The recText to set.
     */
    private void setRecText(
            String value) {
        Class<?> valueClass = value.getClass();
        bitField0_ |= 0x00000002;
        recText_ = value;
    }

    /**
     * <code>optional string recText = 2;</code>
     */
    private void clearRecText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recText_ = getDefaultInstance().getRecText();
    }

    /**
     * <code>optional string recText = 2;</code>
     *
     * @param value The bytes for recText to set.
     */
    private void setRecTextBytes(
            com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        recText_ = value.toStringUtf8();
        bitField0_ |= 0x00000002;
    }

    public static final int RECSWITCH_FIELD_NUMBER = 3;
    private int recSwitch_;

    /**
     * <code>optional int32 recSwitch = 3;</code>
     *
     * @return Whether the recSwitch field is set.
     */
    @Override
    public boolean hasRecSwitch() {
        return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     * <code>optional int32 recSwitch = 3;</code>
     *
     * @return The recSwitch.
     */
    @Override
    public int getRecSwitch() {
        return recSwitch_;
    }

    /**
     * <code>optional int32 recSwitch = 3;</code>
     *
     * @param value The recSwitch to set.
     */
    private void setRecSwitch(int value) {
        bitField0_ |= 0x00000004;
        recSwitch_ = value;
    }

    /**
     * <code>optional int32 recSwitch = 3;</code>
     */
    private void clearRecSwitch() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recSwitch_ = 0;
    }

    public static DanmakuFlagConfig parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmakuFlagConfig parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmakuFlagConfig parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmakuFlagConfig parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmakuFlagConfig parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static DanmakuFlagConfig parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static DanmakuFlagConfig parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static DanmakuFlagConfig parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static DanmakuFlagConfig parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static DanmakuFlagConfig parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static DanmakuFlagConfig parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static DanmakuFlagConfig parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(DanmakuFlagConfig prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    DanmakuFlagConfig, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig)
            DanmakuFlagConfigOrBuilder {
        // Construct using com.muedsa.bilibililiveapiclient.model.danmaku.DanmakuFlagConfig.newBuilder()
        private Builder() {
            super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int32 recFlag = 1;</code>
         *
         * @return Whether the recFlag field is set.
         */
        @Override
        public boolean hasRecFlag() {
            return instance.hasRecFlag();
        }

        /**
         * <code>optional int32 recFlag = 1;</code>
         *
         * @return The recFlag.
         */
        @Override
        public int getRecFlag() {
            return instance.getRecFlag();
        }

        /**
         * <code>optional int32 recFlag = 1;</code>
         *
         * @param value The recFlag to set.
         * @return This builder for chaining.
         */
        public Builder setRecFlag(int value) {
            copyOnWrite();
            instance.setRecFlag(value);
            return this;
        }

        /**
         * <code>optional int32 recFlag = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearRecFlag() {
            copyOnWrite();
            instance.clearRecFlag();
            return this;
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @return Whether the recText field is set.
         */
        @Override
        public boolean hasRecText() {
            return instance.hasRecText();
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @return The recText.
         */
        @Override
        public String getRecText() {
            return instance.getRecText();
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @return The bytes for recText.
         */
        @Override
        public com.google.protobuf.ByteString
        getRecTextBytes() {
            return instance.getRecTextBytes();
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @param value The recText to set.
         * @return This builder for chaining.
         */
        public Builder setRecText(
                String value) {
            copyOnWrite();
            instance.setRecText(value);
            return this;
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearRecText() {
            copyOnWrite();
            instance.clearRecText();
            return this;
        }

        /**
         * <code>optional string recText = 2;</code>
         *
         * @param value The bytes for recText to set.
         * @return This builder for chaining.
         */
        public Builder setRecTextBytes(
                com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setRecTextBytes(value);
            return this;
        }

        /**
         * <code>optional int32 recSwitch = 3;</code>
         *
         * @return Whether the recSwitch field is set.
         */
        @Override
        public boolean hasRecSwitch() {
            return instance.hasRecSwitch();
        }

        /**
         * <code>optional int32 recSwitch = 3;</code>
         *
         * @return The recSwitch.
         */
        @Override
        public int getRecSwitch() {
            return instance.getRecSwitch();
        }

        /**
         * <code>optional int32 recSwitch = 3;</code>
         *
         * @param value The recSwitch to set.
         * @return This builder for chaining.
         */
        public Builder setRecSwitch(int value) {
            copyOnWrite();
            instance.setRecSwitch(value);
            return this;
        }

        /**
         * <code>optional int32 recSwitch = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearRecSwitch() {
            copyOnWrite();
            instance.clearRecSwitch();
            return this;
        }

        // @@protoc_insertion_point(builder_scope:com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig)
    }

    @Override
    @SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
        switch (method) {
            case NEW_MUTABLE_INSTANCE: {
                return new DanmakuFlagConfig();
            }
            case NEW_BUILDER: {
                return new Builder();
            }
            case BUILD_MESSAGE_INFO: {
                Object[] objects = new Object[]{
                        "bitField0_",
                        "recFlag_",
                        "recText_",
                        "recSwitch_",
                };
                String info =
                        "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
                                "\u1208\u0001\u0003\u1004\u0002";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
            case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
                com.google.protobuf.Parser<DanmakuFlagConfig> parser = PARSER;
                if (parser == null) {
                    synchronized (DanmakuFlagConfig.class) {
                        parser = PARSER;
                        if (parser == null) {
                            parser =
                                    new DefaultInstanceBasedParser<DanmakuFlagConfig>(
                                            DEFAULT_INSTANCE);
                            PARSER = parser;
                        }
                    }
                }
                return parser;
            }
            case GET_MEMOIZED_IS_INITIALIZED: {
                return (byte) 1;
            }
            case SET_MEMOIZED_IS_INITIALIZED: {
                return null;
            }
        }
        throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.muedsa.bilibililiveapiclient.model.DanmakuFlagConfig)
    private static final DanmakuFlagConfig DEFAULT_INSTANCE;

    static {
        DanmakuFlagConfig defaultInstance = new DanmakuFlagConfig();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
                DanmakuFlagConfig.class, defaultInstance);
    }

    public static DanmakuFlagConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DanmakuFlagConfig> PARSER;

    public static com.google.protobuf.Parser<DanmakuFlagConfig> parser() {
        return DEFAULT_INSTANCE.getParserForType();
    }
}

